def number_of_bytes(n):
    """This funciton is used to count number of bytes of hex number"""
    return (len(n) - 2) / 2


def hex_to_little_endian(n):
    return int("0x" + n[:1:-1], base=16)


def hex_to_big_endian(n):
    return int(n, base=16)


def big_endian_to_hex(n, n_bytes):
    big_endian = hex(n)
    while len(big_endian) - 2 < n_bytes * 2:
        big_endian += "0"
    return big_endian


def little_endian_to_hex(n, n_bytes):
    little_endian = "0x"
    hex_part = hex(n)[2:]
    while len(little_endian) + len(hex_part) - 2 < n_bytes * 2:
        little_endian += "0"
    little_endian += hex_part
    return little_endian


test_vectors = ["0xff00000000000000000000000000000000000000000000000000000000000000",
                "0xaaaa000000000000000000000000000000000000000000000000000000000000",
                "0xffffffff",
                "0xf
test_n_bytes = [32, 32, 4, 512]
test_little_endians = [255, 43690, 4294967295, 15]
test_big_endians = [115339776388732929035197660848497720713218148788040405586178452820382218977280,
                    77193548260167611359494267807458109956502771454495792280332974934474558013440,
                    4294967295,
                    979114576324830475023518166296835358668716483481922294110218890578706788723335115795775136189060210944584475044786808910613350098299181506809283832360654948074334665509728123444088990750984735919776315636114949587227798911935355699067813766573049953903257414411690972566828795693861196044813729172123152193769005290826676049325224028303369631812105737593272002471587527915367835952474124875982077070337970837392460768423348044782340688207323630599527945406427226264695390995320400314062984891593411332752703846859640346323687201762934524222363836094053204269986087043470117703336873406636573235808683444836432453459818599293667760149123595668832133083221407128310342064668595954073131257995767262426534143159642539179485013975461689493733866106312135829807129162654188209922755829012304582671671519678313609748646814745057724363462189490278183457296449014163077506949636570237334109910914728582640301294341605533983878368789071427913184794906223657920124153256147359625549743656058746335124502376663710766611046750739680547042183503568549468592703882095207981161012224965829605768300297615939788368703353944514111011011184191740295491255291545096680705534063721012625490368756140460791685877738232879406346334603566914069127957053440]


for j in range(4):  # this cycle is used to check if results of test vectors matches each other
    assert number_of_bytes(test_vectors[j]) == test_n_bytes[j]
    assert hex_to_little_endian(test_vectors[j]) == test_little_endians[j]
    assert hex_to_big_endian(test_vectors[j]) == test_big_endians[j]
    assert big_endian_to_hex(test_big_endians[j], test_n_bytes[j]) == test_vectors[j]
    assert little_endian_to_hex(test_little_endians[j], test_n_bytes[j]) == "0x" + test_vectors[j][:1:-1]

while True:
    choice = int(input("Введіть номер бажаної операції(1-4)\n1.HEX to Little Endian\n2.HEX to Big Endian\n3.Little "
                       "Endian to HEX\n4.Big Endian to HEX\n"))
    if choice == 1:
        while True:
            x = input("Введіть значення шістнадцяткове значення n у вигляді \'0x....\': ")
            if x.isalnum() and x[0:2] == "0x":
                print(f"Little endian: {hex_to_little_endian(x)}")
                break
            else:
                print("Будь ласка, введіть валідне значення n")
    if choice == 2:
        while True:
            x = input("Введіть значення шістнадцяткове значення n у вигляді \'0x....\': ")
            if x.isalnum() and x[0:2] == "0x":
                print(f"Big endian: {hex_to_big_endian(x)}")
                break
            else:
                print("Будь ласка, введіть валідне значення n")
    if choice == 3:
        while True:
            x = int(input("Введіть Little Endian значення n: "))
            n_bytes = int(input("Введіть кількість байт, у яких буде зберігатися значення n: "))
            if number_of_bytes(hex(x)) <= n_bytes:
                print(f"Hex: {little_endian_to_hex(x, n_bytes)}")
                break
            else:
                print("Будь ласка, введіть валідне значення кількості байт")
    if choice == 4:
        while True:
            x = int(input("Введіть Big Endian значення n: "))
            n_bytes = int(input("Введіть кількість байт, у яких буде зберігатися значення n: "))
            if number_of_bytes(hex(x)) <= n_bytes:
                print(f"Hex: {big_endian_to_hex(x, n_bytes)}")
                break
            else:
                print("Будь ласка, введіть валідне значення кількості байт")


